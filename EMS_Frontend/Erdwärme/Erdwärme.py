# -*- coding: utf-8 -*-

# self implementation generated from reading ui file 'C:/Users/Marius/Desktop/self.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import seaborn as sns
import matplotlib
matplotlib.use('Qt5Agg')
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg
from matplotlib.figure import Figure
import matplotlib.pyplot as plt
import os
import sys
import pandas as pd
import csv
from Erdwärme.Erdwärme_Karte import WindowErdwärmeKarte
import importlib
Slider = importlib.import_module("EMS-Frontend.data.Stylesheets")
Import = importlib.import_module("EMS-Backend.Classes.Import")
BackErdwärme = importlib.import_module("EMS-Backend.Classes.Erdwärme")
import warnings
warnings.filterwarnings("error")
import ErdSimCPP

from PyQt5 import *
from PyQt5 import QtGui
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Erdwärme(QWidget):
    
    def __init__(self, parent):
        super(Ui_Erdwärme, self).__init__()

        self.parent = parent
        self.setObjectName("self")
        self.setWindowTitle("Erdwärme")
        self.resize(799, 686)
        self.windowKarte = WindowErdwärmeKarte()

        self.line = QtWidgets.QFrame(self)
        self.line.setGeometry(QtCore.QRect(550, 0, 20, 831))
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.widget = QtWidgets.QWidget(self)
        self.widget.setGeometry(QtCore.QRect(10, 10, 541, 671))
        self.widget.setObjectName("widget")
        self.verticalLayout_18 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_18.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_18.setObjectName("verticalLayout_18")
        self.verticalLayout_17 = QtWidgets.QVBoxLayout()
        self.verticalLayout_17.setObjectName("verticalLayout_17")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout()
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.label_Adresse = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_Adresse.setFont(font)
        self.label_Adresse.setObjectName("label_Adresse")
        self.label_Adresse.setText("Adresse")
        self.verticalLayout_10.addWidget(self.label_Adresse)
        self.lineEdit_InputAdresse = QtWidgets.QLineEdit(self.widget)
        self.lineEdit_InputAdresse.setClearButtonEnabled(True)
        self.lineEdit_InputAdresse.setObjectName("lineEdit_InputAdresse")
        self.lineEdit_InputAdresse.setPlaceholderText("Höchstädtplatz 6, 1200 Wien")

        self.verticalLayout_10.addWidget(self.lineEdit_InputAdresse)
        self.horizontalLayout.addLayout(self.verticalLayout_10)
        self.pushButton_openKarte = QtWidgets.QPushButton(self.widget)
        self.pushButton_openKarte.setObjectName("pushButton_openKarte")
        self.pushButton_openKarte.setText("Karte")
        self.horizontalLayout.addWidget(self.pushButton_openKarte)
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.label_anzSonden = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_anzSonden.setFont(font)
        self.label_anzSonden.setObjectName("label_anzSonden")
        self.label_anzSonden.setText("Anzahl Sonden")

        self.verticalLayout_7.addWidget(self.label_anzSonden)
        self.spinBox_AnzSonden = QtWidgets.QSpinBox(self.widget)
        self.spinBox_AnzSonden.setObjectName("spinBox_anzSonden")
        self.verticalLayout_7.addWidget(self.spinBox_AnzSonden)
        self.horizontalLayout.addLayout(self.verticalLayout_7)
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.label_absSonden = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_absSonden.setFont(font)
        self.label_absSonden.setObjectName("label_absSonden")
        self.label_absSonden.setText("Abstand Sonden [m]")
        self.verticalLayout_8.addWidget(self.label_absSonden)
        self.doubleSpinBox_absSonden = QtWidgets.QDoubleSpinBox(self.widget)
        self.doubleSpinBox_absSonden.setObjectName("doubleSpinBox_absSonden")
        self.verticalLayout_8.addWidget(self.doubleSpinBox_absSonden)
        self.horizontalLayout.addLayout(self.verticalLayout_8)
        self.verticalLayout_17.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_Bodentemperatur = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_Bodentemperatur.setFont(font)
        self.label_Bodentemperatur.setObjectName("label_Bodentemperatur")
        self.label_Bodentemperatur.setText("Bodentemperatur [°C]")

        self.verticalLayout_3.addWidget(self.label_Bodentemperatur)
        self.doubleSpinBox_Bodentemperatur = QtWidgets.QDoubleSpinBox(self.widget)
        self.doubleSpinBox_Bodentemperatur.setObjectName("doubleSpinBox_Bodentemperatur")
        self.verticalLayout_3.addWidget(self.doubleSpinBox_Bodentemperatur)
        self.horizontalLayout_2.addLayout(self.verticalLayout_3)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.label_cp = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_cp.setFont(font)
        self.label_cp.setObjectName("label_cp")
        self.label_cp.setText("cp Boden [J/kgK]")

        self.verticalLayout_4.addWidget(self.label_cp)
        self.spinBox_cp = QtWidgets.QSpinBox(self.widget)
        self.spinBox_cp.setObjectName("spinBox_cp")
        self.verticalLayout_4.addWidget(self.spinBox_cp)
        self.horizontalLayout_2.addLayout(self.verticalLayout_4)
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_Dichte = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_Dichte.setFont(font)
        self.label_Dichte.setObjectName("label_Dichte")
        self.label_Dichte.setText("Dichte Boden [kg/m³]")

        self.verticalLayout_5.addWidget(self.label_Dichte)
        self.spinBox_Dichte = QtWidgets.QSpinBox(self.widget)
        self.spinBox_Dichte.setObjectName("spinBox_Dichte")
        self.verticalLayout_5.addWidget(self.spinBox_Dichte)
        self.horizontalLayout_2.addLayout(self.verticalLayout_5)
        self.verticalLayout_9 = QtWidgets.QVBoxLayout()
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.label_Bohrtiefe = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_Bohrtiefe.setFont(font)
        self.label_Bohrtiefe.setObjectName("label_Bohrtiefe")
        self.label_Bohrtiefe.setText("Bohrtiefe [m]")

        self.verticalLayout_9.addWidget(self.label_Bohrtiefe)
        self.doubleSpinBox_Bohrtiefe = QtWidgets.QDoubleSpinBox(self.widget)
        self.doubleSpinBox_Bohrtiefe.setObjectName("doubleSpinBox_Bohrtiefe")
        self.verticalLayout_9.addWidget(self.doubleSpinBox_Bohrtiefe)
        self.horizontalLayout_2.addLayout(self.verticalLayout_9)
        self.verticalLayout_17.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout()
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.label_WM = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_WM.setFont(font)
        self.label_WM.setObjectName("label_WM")
        self.label_WM.setText("Wärmeleitfähigkeit Boden [W/mK]")

        self.verticalLayout_12.addWidget(self.label_WM)
        self.doubleSpinBox_WM_spez = QtWidgets.QDoubleSpinBox(self.widget)
        self.doubleSpinBox_WM_spez.setObjectName("doubleSpinBox_Bohrtiefe_2")
        self.verticalLayout_12.addWidget(self.doubleSpinBox_WM_spez)
        self.horizontalLayout_5.addLayout(self.verticalLayout_12)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_Seitenlange = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_Seitenlange.setFont(font)
        self.label_Seitenlange.setObjectName("label_Seitenlange")
        self.label_Seitenlange.setText("Seitenlänge [AxA]")

        self.verticalLayout.addWidget(self.label_Seitenlange)
        self.spinBox_Seitenlange = QtWidgets.QSpinBox(self.widget)
        self.spinBox_Seitenlange.setObjectName("spinBox_Seitenlange")
        self.verticalLayout.addWidget(self.spinBox_Seitenlange)
        self.horizontalLayout_5.addLayout(self.verticalLayout)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_LangePixel = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_LangePixel.setFont(font)
        self.label_LangePixel.setObjectName("label_LangePixel")
        self.verticalLayout_2.addWidget(self.label_LangePixel)
        self.doublespinBox_LangePixel = QtWidgets.QDoubleSpinBox(self.widget)
        self.doublespinBox_LangePixel.setObjectName("spinBox_LangePixel")
        self.label_LangePixel.setText("Länge Pixel [m]")

        self.verticalLayout_2.addWidget(self.doublespinBox_LangePixel)
        self.horizontalLayout_5.addLayout(self.verticalLayout_2)
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.radioButton_Python = QtWidgets.QRadioButton(self.widget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.radioButton_Python.setFont(font)
        self.radioButton_Python.setObjectName("radioButton_Python")
        self.radioButton_Python.setText("Python")

        self.verticalLayout_6.addWidget(self.radioButton_Python)
        self.radioButton_CPP = QtWidgets.QRadioButton(self.widget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.radioButton_CPP.setFont(font)
        self.radioButton_CPP.setChecked(True)
        self.radioButton_CPP.setAutoRepeat(False)
        self.radioButton_CPP.setObjectName("radioButton_CPP")
        self.radioButton_CPP.setText("C++")

        self.verticalLayout_6.addWidget(self.radioButton_CPP)
        self.horizontalLayout_5.addLayout(self.verticalLayout_6)
        self.verticalLayout_17.addLayout(self.horizontalLayout_5)
        self.verticalLayout_18.addLayout(self.verticalLayout_17)
        #self.listWidget = QtWidgets.QListWidget(self.widget)
        #self.listWidget.setObjectName("listWidget")
        #self.verticalLayout_18.addWidget(self.listWidget)
        self.widget1 = QtWidgets.QWidget(self)
        self.widget1.setGeometry(QtCore.QRect(570, 10, 224, 295))
        self.widget1.setObjectName("widget1")
        self.verticalLayout_21 = QtWidgets.QVBoxLayout(self.widget1)
        self.verticalLayout_21.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_21.setObjectName("verticalLayout_21")
        self.label_Profil = QtWidgets.QLabel(self.widget1)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_Profil.setFont(font)
        self.label_Profil.setObjectName("label_Profil")
        self.label_Profil.setText("Profil")

        self.verticalLayout_21.addWidget(self.label_Profil)
        self.verticalLayout_16 = QtWidgets.QVBoxLayout()
        self.verticalLayout_16.setObjectName("verticalLayout_16")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout()
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.label_ProfilEingabe = QtWidgets.QLabel(self.widget1)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_ProfilEingabe.setFont(font)
        self.label_ProfilEingabe.setObjectName("label_ProfilEingabe")
        self.label_ProfilEingabe.setText("Eingabe Profilname")

        self.verticalLayout_11.addWidget(self.label_ProfilEingabe)
        self.lineEdit_Profil = QtWidgets.QLineEdit(self.widget1)
        self.lineEdit_Profil.setClearButtonEnabled(True)
        self.lineEdit_Profil.setObjectName("lineEdit_Profil")
        self.lineEdit_Profil.setPlaceholderText("Profilname")

        self.verticalLayout_11.addWidget(self.lineEdit_Profil)
        self.horizontalLayout_3.addLayout(self.verticalLayout_11)
        self.verticalLayout_15 = QtWidgets.QVBoxLayout()
        self.verticalLayout_15.setObjectName("verticalLayout_15")
        self.label_4 = QtWidgets.QLabel(self.widget1)
        self.label_4.setText("")
        self.label_4.setObjectName("label_4")
        self.verticalLayout_15.addWidget(self.label_4)
        self.pushButton_SaveProfile = QtWidgets.QPushButton(self.widget1)
        self.pushButton_SaveProfile.setObjectName("pushButton_SaveProfile")
        self.pushButton_SaveProfile.setText("Save Profile")

        self.verticalLayout_15.addWidget(self.pushButton_SaveProfile)
        self.horizontalLayout_3.addLayout(self.verticalLayout_15)
        self.verticalLayout_16.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout()
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.label_ProfilAuswahl = QtWidgets.QLabel(self.widget1)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_ProfilAuswahl.setFont(font)
        self.label_ProfilAuswahl.setObjectName("label_ProfilAuswahl")
        self.label_ProfilAuswahl.setText("Auswahl Profil")

        self.verticalLayout_13.addWidget(self.label_ProfilAuswahl)
        self.comboBox_SelectProfile = QtWidgets.QComboBox(self.widget1)
        self.comboBox_SelectProfile.setObjectName("comboBox_SelectProfile")
        self.verticalLayout_13.addWidget(self.comboBox_SelectProfile)
        self.horizontalLayout_4.addLayout(self.verticalLayout_13)
        self.verticalLayout_14 = QtWidgets.QVBoxLayout()
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.label_3 = QtWidgets.QLabel(self.widget1)
        self.label_3.setText("")
        self.label_3.setObjectName("label_3")
        self.verticalLayout_14.addWidget(self.label_3)
        self.pushButton_DeleteProfile = QtWidgets.QPushButton(self.widget1)
        self.pushButton_DeleteProfile.setObjectName("pushButton_DeleteProfile")
        self.pushButton_DeleteProfile.setText("Delete Profile")

        self.verticalLayout_14.addWidget(self.pushButton_DeleteProfile)
        self.horizontalLayout_4.addLayout(self.verticalLayout_14)
        self.verticalLayout_16.addLayout(self.horizontalLayout_4)
        self.pushButton_UseProfile = QtWidgets.QPushButton(self.widget1)
        self.pushButton_UseProfile.setObjectName("pushButton_UseProfile")
        self.pushButton_UseProfile.setText("Profil benutzen")
        self.pushButton_UseProfile.setStyleSheet(
                             "QPushButton::pressed"
                             "{"
                             "background-color : red,"
                             "}")  

        self.verticalLayout_16.addWidget(self.pushButton_UseProfile)
        self.verticalLayout_21.addLayout(self.verticalLayout_16)
        self.label_2 = QtWidgets.QLabel(self.widget1)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_2.setText("Misc Daten")

        self.verticalLayout_21.addWidget(self.label_2)
        self.verticalLayout_20 = QtWidgets.QVBoxLayout()
        self.verticalLayout_20.setObjectName("verticalLayout_20")
        self.label_AnzPxl = QtWidgets.QLabel(self.widget1)
        self.label_AnzPxl.setObjectName("label_AnzPxl")
        self.label_AnzPxl.setText("Anzahl Pixel")

        self.verticalLayout_20.addWidget(self.label_AnzPxl)
        self.lineEdit_AnzPxl = QtWidgets.QLineEdit(self.widget1)
        self.lineEdit_AnzPxl.setObjectName("lineEdit_AnzPxl")
        self.verticalLayout_20.addWidget(self.lineEdit_AnzPxl)
        self.verticalLayout_21.addLayout(self.verticalLayout_20)
        self.verticalLayout_19 = QtWidgets.QVBoxLayout()
        self.verticalLayout_19.setObjectName("verticalLayout_19")
        self.label_AnzCon = QtWidgets.QLabel(self.widget1)
        self.label_AnzCon.setObjectName("label_AnzCon")
        self.label_AnzCon.setText("Anzahl Connections")
        self.verticalLayout_19.addWidget(self.label_AnzCon)
        self.lineEdit_AnzCon = QtWidgets.QLineEdit(self.widget1)
        self.lineEdit_AnzCon.setObjectName("lineEdit_AnzCon")
        self.verticalLayout_19.addWidget(self.lineEdit_AnzCon)
        self.verticalLayout_21.addLayout(self.verticalLayout_19)

        self.li_inputWidgets = [self.lineEdit_InputAdresse,self.spinBox_AnzSonden,self.doubleSpinBox_absSonden,
                                self.doubleSpinBox_Bodentemperatur,self.spinBox_cp,self.spinBox_Dichte,
                                self.doubleSpinBox_Bohrtiefe,self.doubleSpinBox_WM_spez,self.spinBox_Seitenlange,
                                self.doublespinBox_LangePixel]

        for widget in self.li_inputWidgets[1:]:
            widget.setRange(0,99999)

        #Combobox befüllen mit vorhandenen Daten
        names = list(pd.read_csv("./EMS-Frontend/data/Erdwärme_Profile.csv", usecols = [0], delimiter = ",", encoding='utf-8')["Name"])
        self.comboBox_SelectProfile.addItems(names)
        self.comboBox_SelectProfile.activated.connect(self.SetText)
        self.comboBox_SelectProfile.activated.connect(self.LoadProfile)
        self.pushButton_SaveProfile.clicked.connect(self.SaveProfile)
        self.pushButton_DeleteProfile.clicked.connect(self.DeleteProfile)
        self.pushButton_UseProfile.clicked.connect(self.UseProfile)
        self.pushButton_openKarte.clicked.connect(self.OpenMap)

        self.spinBox_Seitenlange.valueChanged.connect(self.UpdatePlot)
        self.doublespinBox_LangePixel.valueChanged.connect(self.UpdatePlot)
        self.doubleSpinBox_absSonden.valueChanged.connect(self.UpdatePlot)
        self.spinBox_AnzSonden.valueChanged.connect(self.UpdatePlot)

        self.fig = Figure()
        self.ax = self.fig.add_subplot()

        self.canvas = FigureCanvasQTAgg(self.fig)
        self.canvas.setSizePolicy(QtWidgets.QSizePolicy.Expanding,QtWidgets.QSizePolicy.Expanding)
        self.canvas.updateGeometry()
        self.hasRunOnce = False
        self.verticalLayout_18.addWidget(self.canvas)


    def SetText(self):
        self.lineEdit_Profil.setText(self.comboBox_SelectProfile.currentText())

    def SaveProfile(self):
        names = list(pd.read_csv("./EMS-Frontend/data/Erdwärme_Profile.csv", usecols = [0], delimiter = ",", encoding='utf-8')["Name"])
        
        name = self.lineEdit_Profil.text()
        #Wenn nichts im Lineedit steht oder kein Radiobutton ausgewählt ist wird das Profil nicht gespeichert
        if name == "" or self.label_Adresse.text() == "":
            return
   
        li_toSave = []
        li_toSave.append(name)

        for widget in self.li_inputWidgets:
            if widget.objectName() == "lineEdit_InputAdresse":
                li_toSave.append(widget.text())
            else:
                li_toSave.append(widget.value())

        if self.radioButton_CPP.isChecked():
            li_toSave.append("CPP")
        else:
            li_toSave.append("Python")

        #Kontrolle ob ein Profil mit diesem Namen bereits existiert
        if name in names:
            self.DeleteProfile()
        #Neues Profil hinzufügen
        with open("./EMS-Frontend/data/Erdwärme_Profile.csv",'a', newline='', encoding="utf-8") as f:
            writer = csv.writer(f, lineterminator='\n')
            writer.writerow(li_toSave)
        self.UpdateProfiles()
   
    def DeleteProfile(self):
        name = self.lineEdit_Profil.text()
        with open("./EMS-Frontend/data/Erdwärme_Profile.csv", 'r', encoding="utf-8") as inp:
            lines = inp.readlines()
        with open("./EMS-Frontend/data/Erdwärme_Profile.csv",'w', newline='', encoding="utf-8") as f:
            for line in lines:
                if line.split(",")[0] != name:
                    f.write(line)
        self.UpdateProfiles()
        

    def UpdateProfiles(self):
        names = list(pd.read_csv("./EMS-Frontend/data/Erdwärme_Profile.csv", usecols = [0], delimiter = ",", encoding='utf-8')["Name"])
        self.comboBox_SelectProfile.clear() 
        self.comboBox_SelectProfile.addItems(names)        
        self.comboBox_SelectProfile.setCurrentText(self.lineEdit_Profil.text())
                   

    def LoadProfile(self):
     
        df = pd.read_csv("./EMS-Frontend/data/Erdwärme_Profile.csv", delimiter = ",", encoding='utf-8')

        name = self.lineEdit_Profil.text()

        self.lineEdit_Profil.setText(name)
        values = df[df.values == name].values.flatten().tolist()
        if values == []:
            return

        for i,widget in enumerate(self.li_inputWidgets,1):
            if widget.objectName() == "lineEdit_InputAdresse":
                widget.setText(values[i])
            else:
                try:
                    widget.setValue(float(values[i]))
                except TypeError:
                    widget.setValue(int(values[i]))

        if values[-1] == "CPP":
            self.radioButton_CPP.setChecked(True)
        else:
            self.radioButton_Python.setChecked(True)
        

    def UseProfile(self):
        if self.lineEdit_InputAdresse.text() == "" or self.doubleSpinBox_Bohrtiefe.value() == 0:
            return
        
        input_GeoData = {"Adresse" : self.lineEdit_InputAdresse.text(),
								"Bohrtiefe" : self.doubleSpinBox_Bohrtiefe.value(),
								"Anzahl_Sonden" : self.spinBox_AnzSonden.value()}
        Output_GeoData = BackErdwärme.Get_GeothermalData(input_GeoData)
        self.doubleSpinBox_WM_spez.setValue(float(round(Output_GeoData["MW_WL"],3)))
        #self.lineEdit_Leistung.setText(str(round(float(self.lineEdit_WM_spez.text()) * float(self.spinBox_AnzSonden.value()) * float(self.doubleSpinBox_Bohrtiefe.value()) * 5/1000,3)))


        self.SaveProfile()
        df = pd.read_csv("./EMS-Frontend/data/Erdwärme_Profile.csv", delimiter = ",", encoding='utf-8')
        name = self.comboBox_SelectProfile.currentText()

        data = df[df.values == name].values.flatten().tolist()

        self.pushButton_UseProfile.setStyleSheet("QPushButton"
                             "{"
                             "background-color : lightgreen;"
                             "}")
        Erdwärme = {
            "Adresse" : data[1],            
            "Anzahl_Sonden" : data[2],
            "Abstand_Sonden": data[3],
            "Temperatur" : data[4],
            "cp" : data[5],
            "rho" : data[6],
            "Bohrtiefe" : data[7],
            "WM_spez" : data[8],
            "Punkte X" : data[9],
            "Punkte Y" : data[9],
            "Laenge Punkt [m]" : data[10],
            "Typ" : data[11],}
        Import.importGUI.Import_Geothermal(Erdwärme)
        self.parent.lineEdit_Erdwärme.setText(self.lineEdit_Profil.text())


    def OpenMap(self):
        if self.lineEdit_InputAdresse.text() == "" or self.doubleSpinBox_Bohrtiefe.value() == 0:
            return
        
        input_GeoData = {"Adresse" : self.lineEdit_InputAdresse.text(),
								"Bohrtiefe" : self.doubleSpinBox_Bohrtiefe.value(),
								"Anzahl_Sonden" : self.spinBox_AnzSonden.value()}
        Output_GeoData = BackErdwärme.Get_GeothermalData(input_GeoData)
        self.doubleSpinBox_WM_spez.setValue(float(round(Output_GeoData["MW_WL"],3)))
        #self.lineEdit_Leistung.setText(str(round(float(self.lineEdit_WM_spez.text()) * float(self.spinBox_AnzSonden.value()) * float(self.doubleSpinBox_Bohrtiefe.value()) * 5/1000,3)))
        self.windowKarte.UpdatePlot(self.lineEdit_InputAdresse.text(),Output_GeoData["Layer"])
        self.windowKarte.show()

    def UpdatePlot(self):
        if any([self.spinBox_Seitenlange.value(), self.doublespinBox_LangePixel.value(), self.doubleSpinBox_absSonden.value(),self.spinBox_AnzSonden.value()]) == 0 :
            return
        data_Sim = {
			"Punkte X" : int(self.spinBox_Seitenlange.value()),
			"Punkte Y" : int(self.spinBox_Seitenlange.value()),
			"Laenge Punkt [m]" : self.doublespinBox_LangePixel.value()}

        data_Boden = {
			"Temperatur" : self.doubleSpinBox_Bodentemperatur.value(),
			"cp" : self.spinBox_cp.value(),
			"rho" : self.spinBox_Dichte.value()}

        data_pixel = {
            "Bohrtiefe" : self.doubleSpinBox_Bohrtiefe.value(),
            "Anzahl_Sonden" : self.spinBox_AnzSonden.value(),
            "Abstand_Sonden" : self.doubleSpinBox_absSonden.value(),
            "WM_spez" : self.doubleSpinBox_WM_spez.value()}

        x = self.spinBox_Seitenlange.value()
        self.lineEdit_AnzPxl.setText(str(x * x))
        
        anzCon = 2 * x * x + 2 * x
        self.lineEdit_AnzCon.setText(str(anzCon))

        self.Erd_SimCPP = ErdSimCPP.ErdSim(data_Sim, data_pixel, data_Boden)
        temp = self.Erd_SimCPP.GetErdsonde()

        if self.hasRunOnce == True:
            pass
            #self.cb.remove() 

        img = self.ax.imshow(temp, cmap='hot', interpolation='nearest')      

        #self.cb = self.fig.colorbar(img)
        #self.cb.set_label("Temperatur [°C]")

        self.ax.set_title("Erdsondenfeld-Demo")
        self.fig.canvas.draw_idle()
        self.hasRunOnce = True